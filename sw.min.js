const CACHE_NAME="rcv-precache-v3",PRECACHE_URLS=["./","./index.html","./assets/css/style.min.css","./assets/css/script.min.js","./assets/css/footer.min.js","./Images/logo-maroon.png","./Images/og-image-main-branded.png","./Images/og-image-twitter-branded.png","./Images/og-image-square-branded.png","./manifest.webmanifest"];self.addEventListener("install",(e=>{e.waitUntil(caches.open(CACHE_NAME).then((e=>{const t=PRECACHE_URLS.map((t=>e.add(t).then((()=>{})).catch((e=>{}))));return Promise.all(t)})).then((()=>self.skipWaiting())))})),self.addEventListener("activate",(e=>{e.waitUntil(caches.keys().then((e=>Promise.all(e.map((e=>{if(e!==CACHE_NAME)return caches.delete(e)}))))).then((()=>self.clients.claim())))})),self.addEventListener("fetch",(e=>{"GET"===e.request.method&&e.request.url.startsWith("http")&&e.respondWith(caches.match(e.request).then((t=>t||fetch(e.request).then((t=>{if(!t||200!==t.status||"error"===t.type)return t;const s=t.clone(),a=new URL(e.request.url);return/\.(css|js|png|jpg|jpeg|webp|svg|gif|ico|woff|woff2|ttf)$/i.test(a.pathname)&&caches.open(CACHE_NAME).then((t=>{t.put(e.request,s).catch((()=>{}))})),t})).catch((()=>caches.match(e.request))))))}));