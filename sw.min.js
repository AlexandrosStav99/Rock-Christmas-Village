const CACHE_NAME="rcv-precache-v4",PRECACHE_URLS=["./","./index.html","./assets/css/style.min.css","./assets/css/script.min.js","./assets/css/footer.min.js","./Images/logo-maroon.png","./Images/og-image-main-branded.png","./Images/og-image-twitter-branded.png","./Images/og-image-square-branded.png","./manifest.webmanifest"];self.addEventListener("install",(e=>{e.waitUntil(caches.open(CACHE_NAME).then((e=>{const t=PRECACHE_URLS.map((t=>e.add(t).then((()=>{})).catch((e=>{}))));return Promise.all(t)})).then((()=>self.skipWaiting())))})),self.addEventListener("activate",(e=>{e.waitUntil(caches.keys().then((e=>Promise.all(e.map((e=>{if(e!==CACHE_NAME)return caches.delete(e)}))))).then((()=>self.clients.claim())))})),self.addEventListener("fetch",(e=>{"GET"===e.request.method&&("document"!==e.request.destination?"image"!==e.request.destination?e.respondWith(caches.match(e.request).then((t=>{const s=fetch(e.request).then((t=>{if(200===t.status){const s=t.clone();caches.open(CACHE_NAME).then((t=>t.put(e.request,s)))}return t}));return t||s}))):e.respondWith(caches.match(e.request).then((t=>t||fetch(e.request).then((t=>{if(200===t.status){const s=t.clone();caches.open(CACHE_NAME).then((t=>{t.put(e.request,s)}))}return t}))))):e.respondWith(fetch(e.request).then((t=>{const s=t.clone();return caches.open(CACHE_NAME).then((t=>t.put(e.request,s))),t})).catch((()=>caches.match(e.request)))))}));